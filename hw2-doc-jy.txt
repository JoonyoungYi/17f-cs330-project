http://egloos.zum.com/YSocks/v/501670

처음 테스팅 참고
http://dcclab.sogang.ac.kr/index.php?document_srl=3124&mid=os2014
http://thinkpro.tistory.com/120
https://github.com/mintrupt/pintos/blob/master/docs/hw2.md
http://blog.naver.com/PostView.nhn?blogId=jkpops&logNo=10036756666&redirect=Dlog&widgetTypeCall=true

디버깅참고
https://web.stanford.edu/class/cs140/projects/pintos/pintos_10.html

git pull && make clean && make

## tests/userprog/args-none
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/args-none -a args-none -- -q   -f run args-none

## tests/userprog/args-single
### make tests/userprog/args-single.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/args-single -a args-single -- -q   -f run 'args-single onearg'

## tests/userprog/args-multiple
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/args-multiple -a args-multiple -- -q   -f run 'args-multiple some arguments for you!'

## tests/userprog/args-many
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/args-many -a args-many -- -q   -f run 'args-many a b c d e f g h i j k l m n o p q r s t u v'

## tests/userprog/args-dbl-space
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/args-dbl-space -a args-dbl-space -- -q   -f run 'args-dbl-space two  spaces!'

# PART 2

## halt
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/halt -a halt -- -q   -f run halt

## exit
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/exit -a exit -- -q   -f run exit

## normal
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/create-normal -a create-normal -- -q   -f run create-normal

## exists
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/create-exists -a create-exists -- -q   -f run create-exists

## long
pintos -v -k -T 4 --qemu  --fs-disk=2 -p tests/userprog/create-long -a create-long -- -q   -f run create-long

## bound
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/create-bound -a create-bound -- -q   -f run create-bound

## empty
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/create-empty -a create-empty -- -q   -f run create-empty

## null 처리
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/create-null -a create-null -- -q   -f run create-null

## bad ptr
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/create-bad-ptr -a create-bad-ptr -- -q   -f run create-bad-ptr


## exec once
### make tests/userprog/exec-once.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/exec-once -a exec-once -p tests/userprog/child-simple -a child-simple -- -q   -f run exec-once

## exec missing
### make tests/userprog/exec-missing.result

## exec arg
### make tests/userprog/exec-arg.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/exec-arg -a exec-arg -p tests/userprog/child-args -a child-args -- -q   -f run exec-arg


## exec bad-ptr
### make tests/userprog/exec-bad-ptr.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/exec-bad-ptr -a exec-bad-ptr -- -q   -f run exec-bad-ptr


## wait twice
### make tests/userprog/wait-twice.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/wait-twice -a wait-twice -p tests/userprog/child-simple -a child-simple -- -q   -f run wait-twice



## open normal
### make tests/userprog/open-normal.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/open-normal -a open-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q   -f run open-normal

## open missing
### make tests/userprog/open-missing.result

## open boundary
### make tests/userprog/open-boundary.result

## open empty
### make tests/userprog/open-empty.result

## open null
### make tests/userprog/open-null.result

## open bad ptr
### make tests/userprog/open-bad-ptr.result

## open bad twice
### make tests/userprog/open-twice.result

## read normal
### make tests/userprog/read-normal.result
pintos -v -k -T 2 --qemu  --fs-disk=2 -p tests/userprog/read-normal -a read-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q   -f run read-normal

## read bad-ptr
### make tests/userprog/read-bad-ptr.result

## read boundary
### make tests/userprog/read-boundary.result

## read-zero
### make tests/userprog/read-zero.result

## read-bad-fd
### make tests/userprog/read-bad-fd.result

## read-stdout
### make tests/userprog/read-stdout.result
